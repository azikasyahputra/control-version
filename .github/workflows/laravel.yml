name: Laravel CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Setup PHP with Xdebug for code coverage
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: xdebug # Use Xdebug for coverage

      # Step 3: Cache Composer dependencies
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      # Step 4: Install Composer Dependencies
      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      # Step 5: Prepare Laravel Application
      - name: Prepare Application
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate

      # Step 6: Prepare Test Database
      - name: Create Test Database
        run: |
          mkdir -p database
          touch database/database.sqlite
          php artisan migrate --env=testing

      # Step 7: Run tests and generate coverage reports (ONCE)
      - name: Run Tests & Generate Coverage
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test --coverage-clover=coverage.clover.xml --coverage-html=storage/logs/coverage

      # Step 8: Upload HTML Coverage Report as an artifact
      - name: Upload HTML Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: laravel-coverage-html
          path: storage/logs/coverage
          retention-days: 3

  deploy:
    runs-on: ubuntu-latest
    # This job needs the tests to pass before running
    needs: laravel-tests
    # IMPORTANT: Only run this deployment step on pushes to the main branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/u300028099/domains/azikasyahputra.com/public_html/control-version
            git pull origin main

            # Only run composer install if composer.lock has changed
            if git diff --name-only HEAD~1 HEAD | grep -q "composer.lock"; then
              echo "composer.lock has changed, running composer install."
              composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev
            else
              echo "composer.lock has not changed, skipping composer install."
            fi

            # Run production optimizations
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan event:cache
