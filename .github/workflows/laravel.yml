name: Laravel

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
          extensions: xdebug

      - uses: actions/checkout@v4

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Run Tests and Generate Reports (Unit + Coverage)
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: |
          # Run tests and generate both XML and HTML reports
          php artisan test --coverage-xml=storage/test-coverage/coverage.xml --coverage-html=storage/test-coverage/html

      - name: Upload PHPUnit XML Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: phpunit-coverage-xml
          path: storage/test-coverage/coverage.xml
          retention-days: 3

      - name: Upload PHPUnit HTML Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: phpunit-coverage-html
          path: storage/test-coverage/html/*
          retention-days: 3

      - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test --coverage-text --coverage-clover=coverage.xml

        # Step 2: Auto Deploy via SSH
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        env:
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}

      - name: Deploy to Server via SSH
        run: |
          ssh -o StrictHostKeyChecking=no -p 65002 u300028099@195.35.62.16 << 'EOF'
            # Navigate to your project directory
            cd /home/u300028099/domains/azikasyahputra.com/public_html/control-version

            # Pull the latest code from the 'main' branch
            git pull origin main

            # Check if the vendor directory exists or composer.json has changed
            if [ ! -d "vendor" ] || [ $(git diff --name-only HEAD~1 HEAD | grep "composer.json") ]; then
              echo "Either vendor directory not found or composer.json has changed, running composer install"
              composer install --no-dev --optimize-autoloader
            else
              echo "Vendor directory exists and composer.json has not changed, skipping composer install"
            fi

            # Run any database migrations
            php artisan migrate --force

            # Cache configuration and routes
            php artisan config:cache
            php artisan route:cache

            # Optimize the application
            php artisan optimize
          EOF
